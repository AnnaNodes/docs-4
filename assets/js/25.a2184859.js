(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{468:function(e,s,t){"use strict";t.r(s);var a=t(8),n=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"quick-guide"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#quick-guide"}},[e._v("#")]),e._v(" Quick Guide")]),e._v(" "),t("h2",{attrs:{id:"quickstart-guide"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#quickstart-guide"}},[e._v("#")]),e._v(" Quickstart guide")]),e._v(" "),t("p",[e._v("Membrane is a Osmosis development environment for smart contracts.")]),e._v(" "),t("p",[e._v("This guide will walk you through setting up your environment, installing Membrane, and using the testnet or "),t("RouterLink",{attrs:{to:"/developing/tools/localosmosis.html"}},[e._v("LocalOsmosis")]),e._v(" to interact with a network.")],1),e._v(" "),t("p",[e._v("For more information on Membrane, visit "),t("RouterLink",{attrs:{to:"/developing/tools/membrane.html"}},[e._v("Membrane's docs")]),e._v(".")],1),e._v(" "),t("h1",{attrs:{id:"initial-setup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#initial-setup"}},[e._v("#")]),e._v(" Initial setup")]),e._v(" "),t("p",[e._v("This tutorial uses a Osmosis specific development suite called Membrane.")]),e._v(" "),t("p",[e._v("Membrane will help you:")]),e._v(" "),t("ul",[t("li",[e._v("Scaffold your dApp project")]),e._v(" "),t("li",[e._v("Develop and deploy smart contracts")]),e._v(" "),t("li",[e._v("Create custom tasks for blockchain and contract interaction")]),e._v(" "),t("li",[e._v("Access a console (or REPL) for interacting with the Osmosis blockchain")]),e._v(" "),t("li",[e._v("Create predefined functions used in tasks and in the console")])]),e._v(" "),t("h2",{attrs:{id:"prerequisites"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Install Docker"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/docker/compose",target:"_blank",rel:"noopener noreferrer"}},[e._v("Install "),t("code",[e._v("docker-compose")]),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Install NPM"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://nodejs.org/download/release/latest-v16.x/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Install Node JS v16"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"_1-set-up-rust"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-set-up-rust"}},[e._v("#")]),e._v(" 1. Set up Rust")]),e._v(" "),t("p",[e._v("Rust is the main programming language used for CosmWasm smart contracts. While WASM smart contracts can theoretically be written in any programming language, CosmWasm libraries and tooling work best with Rust.")]),e._v(" "),t("p",[e._v("First, install the latest version of "),t("a",{attrs:{href:"https://www.rust-lang.org/tools/install",target:"_blank",rel:"noopener noreferrer"}},[e._v("Rust"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("Then run the following commands:")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 1. Set 'stable' as the default release channel:")]),e._v("\n\nrustup default stable\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 2. Add WASM as the compilation target:")]),e._v("\n\nrustup target "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" wasm32-unknown-unknown\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 3. Install the following packages to generate the contract:")]),e._v("\n\ncargo "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" cargo-generate --features vendored-openssl\ncargo "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" cargo-run-script\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br")])]),t("h2",{attrs:{id:"_2-install-membrane"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-install-membrane"}},[e._v("#")]),e._v(" 2. Install Membrane")]),e._v(" "),t("p",[e._v("Use npm to install the Membrane command-line tool globally:")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -g @osmosis-labs/membrane\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h3",{attrs:{id:"localosmosis-vs-testnet"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#localosmosis-vs-testnet"}},[e._v("#")]),e._v(" LocalOsmosis vs Testnet")]),e._v(" "),t("p",[e._v("Depending on your setup, you can either install LocalOsmosis or use the Osmosis testnet to power Membrane.")]),e._v(" "),t("p",[e._v("LocalOsmosis is a development environment designed to make it easy for smart contract developers to test their contracts locally. Membrane can also interact with the Osmosis blockchain's live testing environment using the Osmosis testnet.")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),t("p",[e._v("LocalOsmosis may not work properly on machines with less than 16 GB of RAM. Please use the "),t("RouterLink",{attrs:{to:"/developing/network/join-testnet.html"}},[e._v("Osmosis testnet")]),e._v(" if your device does not meet this requirement.")],1)]),e._v(" "),t("h2",{attrs:{id:"membrane-with-the-testnet"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#membrane-with-the-testnet"}},[e._v("#")]),e._v(" Membrane with the testnet")]),e._v(" "),t("h2",{attrs:{id:"membrane-with-localosmosis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#membrane-with-localosmosis"}},[e._v("#")]),e._v(" Membrane with LocalOsmosis")]),e._v(" "),t("h3",{attrs:{id:"use-membrane-with-localosmosis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#use-membrane-with-localosmosis"}},[e._v("#")]),e._v(" Use Membrane with LocalOsmosis")]),e._v(" "),t("p",[e._v("LocalOsmosis is a complete Osmosis testnet and ecosystem containerized with Docker. Use LocalOsmosis to simulate transactions in a test environment.")]),e._v(" "),t("h4",{attrs:{id:"prerequisites-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites-2"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/docker/compose",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("docker-compose")]),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("At least 16 GB of RAM")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://chrome.google.com/webstore/detail/keplr/dmkamcknogkgcdfhhbddcghachkejeap?hl=en",target:"_blank",rel:"noopener noreferrer"}},[e._v("Keplr Wallet extension"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("Node.js version 16")])]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),t("p",[e._v("Use LTS Node.js 16 if you encounter the following error code:"),t("br"),e._v(" "),t("code",[e._v("error:0308010C:digital envelope routines::unsupported")])])]),e._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[e._v("Running NPM on M1 Macs")]),e._v(" "),t("p",[e._v("Some M1 macs may need to use the latest LTS version of Node to complete this tutorial. Consider using a node version manager such as "),t("a",{attrs:{href:"https://github.com/nvm-sh/nvm/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("NVM"),t("OutboundLink")],1),e._v(".\nAfter installing NVM, run the following to install and use the latest LTS version of node:")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("nvm "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" --lts\nnvm use --lts\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("The "),t("code",[e._v("nvm use --lts")]),e._v(" command will need to be run every time you open a new terminal to use the LTS version of node.")]),e._v(" "),t("p",[e._v("To default to the LTS version of node when restarting your terminal, run the following:")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("nvm "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("alias")]),e._v(" default "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("INSERT NODE VERSION HERE"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("h3",{attrs:{id:"install-and-run-localosmosis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-and-run-localosmosis"}},[e._v("#")]),e._v(" Install and run LocalOsmosis")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("To download LocalOsmosis, run the following commands:")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone --depth "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" https://github.com/osmosis-labs/localosmosis\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("li",[t("p",[e._v("Start LocalOsmosis by running the following:")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" localOsmosis\ndocker-compose up\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])])]),e._v(" "),t("li",[t("p",[e._v("You will start seeing LocalOsmosis block activity in your terminal. Keep LocalOsmosis running while you perform the next steps in a new terminal window.")])])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("LocalOsmosis Accounts\nTo view the LocalOsmosis wallet information, visit the "),t("RouterLink",{attrs:{to:"/developing/dapps/get_started/developing/tools/localosmosis.html#accounts"}},[e._v("LocalOsmosis accounts page")]),e._v(".\nFor more configuration options, visit the "),t("RouterLink",{attrs:{to:"/developing/tools/localosmosis.html#what-is-localosmosisd"}},[e._v("LocalOsmosis configuration page")]),e._v(".")],1)]),e._v(" "),t("h3",{attrs:{id:"counter-tutorial"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#counter-tutorial"}},[e._v("#")]),e._v(" Counter tutorial")]),e._v(" "),t("p",[e._v("After installing LocalOsmosis, you are ready to use Membrane. This short tutorial walks you through setting up your project and creating a simple counter.")]),e._v(" "),t("h4",{attrs:{id:"_1-scaffold-your-dapp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-scaffold-your-dapp"}},[e._v("#")]),e._v(" 1. Scaffold your dApp")]),e._v(" "),t("p",[e._v("With Membrane installed you can now scaffold your new application in a new terminal window:")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("Create a new folder for your dApp:")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("membrane new my-osmosis-dapp\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("li",[t("p",[e._v("Scaffold your dApp:")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" my-osmosis-dapp\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])])])]),e._v(" "),t("h4",{attrs:{id:"project-structure"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#project-structure"}},[e._v("#")]),e._v(" Project structure")]),e._v(" "),t("p",[e._v("The following structure shows your scaffolded project:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(".\n├── contracts              # The contracts' source code.\n│   ├── counter\n│   └── ...                # Add more contracts here.\n├── frontend               # The front-end application.\n├── lib                    # Predefined functions for task and console.\n├── tasks                  # Predefined tasks.\n├── keys.membrane.js        # Keys for signing transactions.\n├── config.membrane.json    # Config for connections and contract deployments.\n└── refs.membrane.json      # Deployed code and contract references.\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br")])]),t("h4",{attrs:{id:"_2-deploy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-deploy"}},[e._v("#")]),e._v(" 2. Deploy")]),e._v(" "),t("p",[e._v("To deploy the application, run the following command:")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("membrane deploy counter --signer test1\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("The deploy command performs the following steps automatically:")]),e._v(" "),t("ul",[t("li",[e._v("Builds the counter smart contract.")]),e._v(" "),t("li",[e._v("Optimizes the counter smart contract.")]),e._v(" "),t("li",[e._v("Uploads counter smart contract to LocalOsmosis.")]),e._v(" "),t("li",[e._v("Instantiates the deployed smart contract.")])]),e._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[e._v("Increase Docker memory")]),e._v(" "),t("p",[e._v("If you are running LocalOsmosis and the previous "),t("code",[e._v("deploy")]),e._v(" command is not working, try increasing Docker's memory allowance by clicking on the Docker icon. Click "),t("strong",[e._v("Preferences")]),e._v(" and then "),t("strong",[e._v("Resources")]),e._v(". Increase the memory to at least 4 gigs. Click "),t("strong",[e._v("Apply & Restart")]),e._v(". Run the deploy command again. You can increase again to 6 gigs if you are still having trouble.")])]),e._v(" "),t("h4",{attrs:{id:"_3-interact-with-the-deployed-contract"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-interact-with-the-deployed-contract"}},[e._v("#")]),e._v(" 3. Interact with the deployed contract")]),e._v(" "),t("p",[e._v("The template comes with several predefined helpers in "),t("code",[e._v("lib/index.js")]),e._v(". Use them to start interacting with your smart contract:")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("Run the following:")]),e._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("membrane console\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("li",[t("p",[e._v("With the console open, increment the counter by running the following:")]),e._v(" "),t("div",{staticClass:"language-JavaScript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("await")]),e._v(" lib"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("increment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("li",[t("p",[e._v("You can get the current count by using:")]),e._v(" "),t("div",{staticClass:"language-JavaScript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("await")]),e._v(" lib"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("getCount")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("li",[t("p",[e._v("After incrementing once, "),t("code",[e._v("await lib.getCount()")]),e._v(" will return:")]),e._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" count"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])])]),e._v(" "),t("p",[e._v(':::{tip}\nBefore proceeding to the next section, kill the running command in your terminal by entering "Ctrl + C" .\n:::')]),e._v(" "),t("h4",{attrs:{id:"_4-front-end-scaffolding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-front-end-scaffolding"}},[e._v("#")]),e._v(" 4. Front-end scaffolding")]),e._v(" "),t("p",[e._v("Membrane also scaffolds a very simple front-end:")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),t("p",[e._v("WIP, this integration with Keplr will need some work.")])]),e._v(" "),t("ol",[t("li",[t("p",[e._v("Open the "),t("a",{attrs:{href:"https://chrome.google.com/webstore/detail/keplr/dmkamcknogkgcdfhhbddcghachkejeap?hl=en",target:"_blank",rel:"noopener noreferrer"}},[e._v("Osmosis Keplr extension"),t("OutboundLink")],1),e._v(", click the gear icon, and switch the network to LocalOsmosis.")])]),e._v(" "),t("li",[t("p",[e._v("To use the front end, run the following commands in order. The "),t("code",[e._v("membrane sync-refs")]),e._v(" command copies your deployed contract addresses to the front-end part of the codebase.")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("membrane sync-refs\ncd frontend\nnpm install\nnpm start\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])])]),e._v(" "),t("li",[t("p",[e._v("Open the Keplr wallet extension and click "),t("strong",[e._v("Add a wallet")]),e._v(". Click "),t("strong",[e._v("Recover wallet")]),e._v(" and input the following seed phrase to access the sole validator on the LocalOsmosis network and gain funds to get started with smart contracts:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("satisfy adjust timber high purchase tuition stool faith fine install that you unaware feed domain license impose boss human eager hat rent enjoy dawn\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])])]),e._v(" "),t("li",[t("p",[e._v("With LocalOsmosis selected in Osmosis Station and the local seed phrase imported, you can now increment and reset the counter from the front end.")])])]),e._v(" "),t("h4",{attrs:{id:"demo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[e._v("#")]),e._v(" Demo")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),t("p",[e._v("WIP, this demo needs work.")])])])}),[],!1,null,null,null);s.default=n.exports}}]);