(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{473:function(e,t,a){"use strict";a.r(t);var s=a(8),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"cosmwasm-with-testnet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cosmwasm-with-testnet"}},[e._v("#")]),e._v(" Cosmwasm with Testnet")]),e._v(" "),a("h2",{attrs:{id:"deploying-cosmwasm-contracts-to-the-testnet-with-beaker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploying-cosmwasm-contracts-to-the-testnet-with-beaker"}},[e._v("#")]),e._v(" Deploying Cosmwasm Contracts to the testnet with Beaker")]),e._v(" "),a("p",[e._v("The following guide will show you how to create and deploy a Cosmwasm smart contract to the Osmosis testnet. The testnet is permisonless by default to allow developers to test their contracts on a live environment. The Osmosis mainnet is permissioned meaning that you will need to submit a governance proposal in order to deploy to it.")]),e._v(" "),a("h3",{attrs:{id:"requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.rust-lang.org/tools/install",target:"_blank",rel:"noopener noreferrer"}},[e._v("Rust"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://doc.rust-lang.org/cargo/getting-started/installation.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cargo"),a("OutboundLink")],1)])]),e._v(" "),a("h3",{attrs:{id:"install-beaker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-beaker"}},[e._v("#")]),e._v(" Install Beaker")]),e._v(" "),a("p",[e._v("Beaker is available via "),a("a",{attrs:{href:"https://doc.rust-lang.org/cargo/getting-started/installation.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("cargo"),a("OutboundLink")],1),e._v(" which is a rust toolchain. Once cargo is ready on your machine, run:")]),e._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("cargo "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" beaker\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h3",{attrs:{id:"scaffolding-your-new-dapp-project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scaffolding-your-new-dapp-project"}},[e._v("#")]),e._v(" Scaffolding your new dapp project")]),e._v(" "),a("p",[e._v("In the directory you want your project to reside, run:")]),e._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("beaker new counter-dapp\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("For detailed information about Beaker "),a("a",{attrs:{href:"https://github.com/osmosis-labs/beaker/edit/main/README.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("click here"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"your-first-cosmwasm-contract-with-beaker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#your-first-cosmwasm-contract-with-beaker"}},[e._v("#")]),e._v(" Your first CosmWasm contract with Beaker")]),e._v(" "),a("p",[e._v("After that we can create new contract (the command uses template from "),a("a",{attrs:{href:"https://github.com/InterWasm/cw-template",target:"_blank",rel:"noopener noreferrer"}},[e._v("cw-template"),a("OutboundLink")],1),e._v(")")]),e._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" counter-dapp\nbeaker wasm new counter\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("h3",{attrs:{id:"deploy-contract-on-permisionless-network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-contract-on-permisionless-network"}},[e._v("#")]),e._v(" Deploy contract on permisionless network")]),e._v(" "),a("p",[e._v("The testnet is permisionless by default in order to allow developers to easyly deploy contracts.")]),e._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("beaker wasm deploy counter --signer-account test1 --network testnet --no-wasm-opt --raw "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'{ \"count\": 0 }'")]),e._v(" --label "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'My first Beaker Contract'")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("Note how we added "),a("code",[e._v("--network testnet")]),e._v(" to tell beaker to deploy to the testnet Osmosis chain.")]),e._v(" "),a("h3",{attrs:{id:"deploy-contract-on-permissioned-network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-contract-on-permissioned-network"}},[e._v("#")]),e._v(" Deploy contract on permissioned network")]),e._v(" "),a("p",[e._v("We can also deploy the contract via governance on the testnet before going to mainnet. There are a couple of steps as described in the manual process via CLI"),a("a",{attrs:{href:"https://docs.osmosis.zone/developing/dapps/get_started/submit_wasm_proposal.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(", more details also available on the "),a("a",{attrs:{href:"https://github.com/CosmWasm/wasmd/blob/main/x/wasm/Governance.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("official CosmWasm Docs"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("The steps are:")]),e._v(" "),a("ul",[a("li",[e._v("Submit proposal")]),e._v(" "),a("li",[e._v("Deposit on proposal")]),e._v(" "),a("li",[e._v("Vote on proposal")])]),e._v(" "),a("h3",{attrs:{id:"submit-proposal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#submit-proposal"}},[e._v("#")]),e._v(" Submit proposal")]),e._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("beaker wasm proposal store-code --title "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Testnet Contract"')]),e._v(" --description "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Testnet Contract"')]),e._v(" --signer-account test1 --network testnet counter --gas 25000000uosmo \n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("-- Notes")]),e._v(" "),a("ul",[a("li",[e._v("Remove gas settings (mainnet wont be more than 1 osmo)")]),e._v(" "),a("li",[e._v('Check testnet (minimum-gas-prices = "0uosmo"), you will pay the max of min-gas-price-for-high-gas-tx = ".0025"')]),e._v(" "),a("li",[e._v('check max-gas-wanted-per-tx = "25000000"')]),e._v(" "),a("li",[e._v("check hash and see how much gas it took, try uploading bigger contract. Check if our gas limit is too low in mainnet.")]),e._v(" "),a("li",[e._v("hardcode maximun gas (--gas-limit 25000000)")])]),e._v(" "),a("p",[e._v("-- proposal.yml")]),e._v(" "),a("ul",[a("li",[e._v("github")]),e._v(" "),a("li",[e._v("title")]),e._v(" "),a("li",[e._v("description")]),e._v(" "),a("li",[e._v("code review process")]),e._v(" "),a("li",[e._v("who did the review")]),e._v(" "),a("li",[e._v("gas")])]),e._v(" "),a("hr"),e._v(" "),a("p",[e._v("Pick contract and deploy to mainnet as a test")]),e._v(" "),a("ul",[a("li",[e._v("ex: stargaze (public, reviewed already)")])]),e._v(" "),a("h3",{attrs:{id:"query-proposal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#query-proposal"}},[e._v("#")]),e._v(" Query proposal")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("beaker wasm proposal query store-code --network testnet counter\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h2",{attrs:{id:"deposit-on-proposal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deposit-on-proposal"}},[e._v("#")]),e._v(" Deposit on proposal")]),e._v(" "),a("h2",{attrs:{id:"vote-on-proposal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vote-on-proposal"}},[e._v("#")]),e._v(" Vote on proposal")]),e._v(" "),a("p",[e._v("On the testnet we can accomplish these three parts with the help of the Osmosis faucet which has a function to vote on a proposal for you. In mainnet the proposal would have to go trough governance in order to be accepted.")]),e._v(" "),a("ul",[a("li",[e._v("make sure it's a wasm proposal")])])])}),[],!1,null,null,null);t.default=r.exports}}]);