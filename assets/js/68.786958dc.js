(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{518:function(s,a,t){"use strict";t.r(a);var e=t(8),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"validating-on-testnet"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#validating-on-testnet"}},[s._v("#")]),s._v(" Validating On Testnet")]),s._v(" "),t("h2",{attrs:{id:"synced-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#synced-node"}},[s._v("#")]),s._v(" Synced Node")]),s._v(" "),t("p",[s._v("Before creating a testnet validator, ensure you have first followed the instructions on how to "),t("a",{attrs:{href:"../developing/network/join-testnet"}},[s._v("join the testnet")])]),s._v(" "),t("h2",{attrs:{id:"initialize-wallet-keyring"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#initialize-wallet-keyring"}},[s._v("#")]),s._v(" Initialize Wallet Keyring")]),s._v(" "),t("p",[s._v("If you decide you want to turn your node into a validator, you will first need to add a wallet to your keyring.")]),s._v(" "),t("p",[s._v("While you can add an existing wallet through your seed phrase, we will create a new wallet in this example (replace KEY_NAME with a name of your choosing):")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("osmosisd keys "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" KEY_NAME\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("Ensure you write down the mnemonic as you can not recover the wallet without it. To ensure your wallet was saved to your keyring, the WALLET_NAME is in your keys list:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("osmosisd keys list\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"validator-public-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#validator-public-key"}},[s._v("#")]),s._v(" Validator Public Key")]),s._v(" "),t("p",[s._v("The last thing needed before initializing the validator is to obtain your validator public key which was created when you first initialized your node. To obtain your validator pubkey:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("osmosisd tendermint show-validator\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"create-validator-command"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-validator-command"}},[s._v("#")]),s._v(" Create Validator Command")]),s._v(" "),t("p",[s._v("Ensure you have a small amount of OSMO on the wallet address you are using on your keyring in order to successfully send a transaction. Once you have have a balance on the address on your keyring, you can now send the create-validator transaction. If you need testnet OSMO, join the osmosis discord, ask for the validator role, and then utilize the faucet bot in the faucet channel.")]),s._v(" "),t("p",[s._v("Here is the empty command:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("osmosisd tx staking create-validator "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--from"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("KEY_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--amount"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("staking_amount_uosmo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--pubkey"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("osmosisd tendermint show-validator"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--moniker"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[moniker_id_of_your_node]"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--security-contact"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[security contact email/contact method]"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--chain-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[chain-id]"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--commission-rate"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[commission_rate]"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--commission-max-rate"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[maximum_commission_rate]"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--commission-max-change-rate"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[maximum_rate_of_change_of_commission]"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--min-self-delegation"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[min_self_delegation_amount]"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--gas"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"auto"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--gas-prices"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[gas_price]"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("Here is the same command but with example values:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("osmosisd tx staking create-validator "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--from"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("wallet1 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--amount"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("500000000uosmo "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--pubkey"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("osmosisd tendermint show-validator"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--moniker"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Wosmongton"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--security-contact"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wosmongton@osmosis.labs"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--chain-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"osmo-test-4"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--commission-rate"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.1"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--commission-max-rate"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.2"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--commission-max-change-rate"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.05"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--min-self-delegation"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"500000000"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--gas"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"auto"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--gas-prices"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.0025uosmo"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("If you need further explanation for each of these command flags:")]),s._v(" "),t("ul",[t("li",[s._v("the "),t("code",[s._v("from")]),s._v(" flag is the KEY_NAME you created when initializing the key on your keyring")]),s._v(" "),t("li",[s._v("the "),t("code",[s._v("amount")]),s._v(" flag is the amount you will place in your own validator in uosmo (in the example, 500000000uosmo is 500osmo)")]),s._v(" "),t("li",[s._v("the "),t("code",[s._v("pubkey")]),s._v(" is the validator public key found earlier")]),s._v(" "),t("li",[s._v("the "),t("code",[s._v("moniker")]),s._v(" is a human readable name you choose for your validator")]),s._v(" "),t("li",[s._v("the "),t("code",[s._v("security-contact")]),s._v(" is an email your delegates are able to contact you at")]),s._v(" "),t("li",[s._v("the "),t("code",[s._v("chain-id")]),s._v(" is whatever chain-id you are working with (in the osmosis mainnet case it is osmosis-1)")]),s._v(" "),t("li",[s._v("the "),t("code",[s._v("commission-rate")]),s._v(" is the rate you will charge your delegates (in the example above, 10 percent)")]),s._v(" "),t("li",[s._v("the "),t("code",[s._v("commission-max-rate")]),s._v(" is the most you are allowed to charge your delegates (in the example above, 20 percent)")]),s._v(" "),t("li",[s._v("the "),t("code",[s._v("commission-max-change-rate")]),s._v(" is how much you can increase your commission rate in a 24 hour period (in the example above, 5 percent per day until reaching the max rate)")]),s._v(" "),t("li",[s._v("the "),t("code",[s._v("min-self-delegation")]),s._v(" is the lowest amount of personal funds the validator is required to have in their own validator to stay bonded (in the example above, 500osmo)")]),s._v(" "),t("li",[s._v("the "),t("code",[s._v("gas-prices")]),s._v(" is the amount of gas used to send this create-validator transaction")])]),s._v(" "),t("h3",{attrs:{id:"troubleshooting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting"}},[s._v("#")]),s._v(" Troubleshooting")]),s._v(" "),t("p",[s._v("If you inspect your "),t("code",[s._v("create-validator")]),s._v(" transaction in the explorer, and see the following error:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("out of gas in location: WritePerByte; gasWanted: 177140, gasUsed: 177979: out of gas\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("Please try subsituting:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('--gas="auto" \\\n--gas-prices="0.0025uosmo"\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("with")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("--gas=<value significantly larger than gasUsed value from the error>\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"track-validator-active-set"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#track-validator-active-set"}},[s._v("#")]),s._v(" Track Validator Active Set")]),s._v(" "),t("p",[s._v("To see the current validator active set:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("osmosisd query staking validators --limit "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),s._v(" -o json "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq -r "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.validators[] |\n[.operator_address, .status, (.tokens|tonumber / pow(10; 6)),\n.commission.update_time[0:19], .description.moniker] | @csv'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("column")]),s._v(" -t -s"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('","')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("You can search for your specific moniker by adding grep MONIKER at the end:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("osmosisd query staking validators --limit "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),s._v(" -o json "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" jq -r "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.validators[] |\n[.operator_address, .status, (.tokens|tonumber / pow(10; 6)),\n.commission.update_time[0:19], .description.moniker] | @csv'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("column")]),s._v(" -t -s"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('","')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" Wosmongton\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("If your bond status is "),t("code",[s._v("BOND_STATUS_BONDED")]),s._v(", congratulations, your validator is part of the active validator set!")]),s._v(" "),t("h2",{attrs:{id:"track-validator-signing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#track-validator-signing"}},[s._v("#")]),s._v(" Track Validator Signing")]),s._v(" "),t("p",[s._v("To track your validator's signing history, copy the validator public key:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("osmosisd tendermint show-validator\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("Use your validators public key queried above:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("osmosisd query slashing signing-info "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("validator-pubkey"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" --chain-id osmo-test-4\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("Example:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("osmosisd query slashing signing-info "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{"@type":"/cosmos.crypto.ed25519.PubKey","key":"HlixoxNZBPq4pBOYEimtSq9Ak4peBISVsIbI5ZHrEAU="}\'')]),s._v(" --chain-id osmo-test-4\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);